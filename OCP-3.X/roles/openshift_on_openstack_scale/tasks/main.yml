---
# Tasks to orchestrate scaleup for OpenShift 3.X on OpenStack

- name: Running the dynamic inventory file to get the current app hosts
  shell: |
    . /home/cloud-user/keystonerc
    /home/cloud-user/openshift-ansible/playbooks/openstack/inventory.py --list | jq '.openstack_compute_nodes["hosts"] | length'
  register: output
  changed_when: false

- name: Setting the current node count
  set_fact:
    current_node_count: "{{ output['stdout'] }}"

# Exit if the node target is less than how many nodes that are already running.
- name: Checking the node count
  fail:
    msg: "The OpenShift node target {{ openshift_node_target }} is less than or equal to than the current node count {{ current_node_count }}"
  when: openshift_node_target|int <= current_node_count|int

- name: Getting the IP address for the DNS VM ns-master
  shell: |
    . /home/cloud-user/keystonerc
    openstack server show ns-master.{{ clusterid }}.{{ dns_domain }} --format value -c addresses
  register: dns_addresses
  changed_when: false

- name: Parsing the floating ip from the DNS VM addresses
  set_fact:
    # Example: dns-network=192.168.0.7, 172.21.0.112
    cluster_dns_ip: "{{ dns_addresses['stdout'].split(', ')[1] }}"
  failed_when: cluster_dns_ip == ""

- name: Reading the remote /home/cloud-user/scale-ci/dns_update.key file
  command: "grep secret /home/cloud-user/scale-ci/dns_update.key "
  register: update_secret
  changed_when: false

- name: Setting the regular expression to find the secret
  set_fact:
    # Example:        secret "8kjyy/xFvzapFwmcWwLzvA==";
    secret_regex: 'secret "(.*)";'

- name: Creating a variable with the DNS secret value
  set_fact:
    dns_key_secret: "{{ update_secret['stdout']|regex_findall(secret_regex)|first }}"

- name: Creating an empty list of blocks
  set_fact:
    blocks: []

- name: Creating begin and end blocks for scaling
  set_fact:
    blocks: "{{ blocks }} + [{'begin': {{ item }}, 'end': {{ (item|int + block_size|int < openshift_node_target|int)|ternary(item|int + block_size|int - 1, openshift_node_target|int - 1) }} }]"
  with_sequence: "start={{ current_node_count }} end={{ openshift_node_target|int - 1 }} stride={{ block_size }}"

- name: Run scale up for each block of hosts
  include_tasks: scaleup.yml
  with_items: "{{ blocks }}"
  loop_control:
    # The loop_var changes the variable name from item to avoid name collisions.
    loop_var: block
