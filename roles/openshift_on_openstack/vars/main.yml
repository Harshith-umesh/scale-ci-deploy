---
# The path to the all.yml file on the target-server.
all_yml_path: "{{ ansible_user_dir }}/inventory/group_vars/all.yml"
# The path to the all.yml.cfg (all.yml override) file on the target-server.
all_yml_cfg_path: "{{ ansible_user_dir }}/inventory/group_vars/all.yml.cfg"
# The path to the file that contains the name server update information.
nsupdate_file: "{{ lookup('env', 'nsupdate_file')|default(ansible_user_dir ~ '/nsupdate_keys.yml', true) }}"
# Look up the environment variable with a space separated string of image registry servers to add to the container configuration.
openshift_registries: "{{ lookup('env', 'openshift_registries') }}"
# The path to the OpenStack RC file on the server vm, may be named differently than other servers.
openstack_rc: "{{ lookup('env', 'openstack_rc_path')|default(ansible_user_dir ~ '/keystonerc', true) }}"
# A list of regular expressions to find and replace lines in inventory/group_vars/OSEv3.yml.
osev3_yml_sr:
  - { find: "^#?openshift_deployment_type: origin", replace: "#openshift_deployment_type: origin" }
  - { find: "^#?openshift_deployment_type: openshift-enterprise", replace: "openshift_deployment_type: openshift-enterprise" }
  - { find: "^#?osm_cluster_network_cidr:.*", replace: "osm_cluster_network_cidr: 10.128.0.0/10" }
  - { find: "^#?openshift_release:.*", replace: "openshift_release: \"v{{ ocp_major_minor }}\"" }
  - { find: "^#?oreg_url:.*", replace: "oreg_url: \"{{ registries[0] }}/openshift3/ose-${component}:${version}\"" }
  - { find: "^#?openshift_docker_additional_registries:.*", replace: "openshift_docker_additional_registries: {{ registries|to_json }}" }
  - { find: "^#?openshift_docker_insecure_registries:.*", replace: "openshift_docker_insecure_registries: {{ registries|to_json }}" }
  - { find: "^#?openshift_cockpit_deployer_prefix:.*", replace: "openshift_cockpit_deployer_prefix: \"{{ registries[0] }}/openshift3/\"" }
  - { find: "^#?openshift_service_catalog_image_prefix:.*", replace: "openshift_service_catalog_image_prefix: \"{{ registries[0] }}/openshift3/ose-\"" }
  - { find: "^#?openshift_web_console_prefix:.*", replace: "openshift_web_console_prefix: \"{{ registries[0] }}/openshift3/ose-\"" }
  - { find: "^#?cli_docker_additional_registries:.*", replace: "cli_docker_additional_registries: {{ registries|to_json }}" }
  - { find: "^#?cli_docker_insecure_registries:.*", replace: "cli_docker_insecure_registries: {{ registries|to_json }}" }
  - { find: "^#?openshift_prometheus_image_prefix:.*", replace: "openshift_prometheus_image_prefix: \"{{ registries[0] }}/openshift3/\"" }
  - { find: "^#?openshift_prometheus_image_version:.*", replace: "openshift_prometheus_image_version: \"v{{ ocp_major_minor }}\"" }
  - { find: "^#?openshift_prometheus_proxy_image_prefix:.*", replace: "openshift_prometheus_proxy_image_prefix: \"{{ registries[0] }}/openshift3/\"" }
  - { find: "^#?openshift_prometheus_proxy_image_version:.*", replace: "openshift_prometheus_proxy_image_version: \"v{{ ocp_major_minor }}\"" }
  - { find: "^#?openshift_prometheus_alertmanager_image_prefix:.*", replace: "openshift_prometheus_alertmanager_image_prefix: \"{{ registries[0] }}/openshift3/\"" }
  - { find: "^#?openshift_prometheus_alertmanager_image_version:.*", replace: "openshift_prometheus_alertmanager_image_version: \"v{{ ocp_major_minor }}\"" }
  - { find: "^#?openshift_prometheus_alertbuffer_image_prefix:.*", replace: "openshift_prometheus_alertbuffer_image_prefix: \"{{ registries[0] }}/openshift3/\"" }
  - { find: "^#?openshift_prometheus_alertbuffer_image_version:.*", replace: "openshift_prometheus_alertbuffer_image_version: \"v{{ ocp_major_minor }}\"" }
  - { find: "^#?ansible_service_broker_image_prefix:.*", replace: "ansible_service_broker_image_prefix: \"{{ registries[0] }}/openshift3/ose-\"" }
  - { find: "^#?ansible_service_broker_image_tag:.*", replace: "ansible_service_broker_image_tag: \"v{{ ocp_major_minor }}\"" }
  - { find: "^#?template_service_broker_prefix:.*", replace: "template_service_broker_prefix: \"{{ registries[0] }}/openshift3/ose-\"" }
  - { find: "^#?template_service_broker_version:.*", replace: "template_service_broker_version: \"v{{ ocp_major_minor }}\"" }

# Break up the space separate string into a list of image registries for the OSEv3.yml variables.
registries: "{{ openshift_registries.split(' ') }}"
