---
# Check for the existence of the OpenStack client.
- name: Checking for the OpenStack client
  stat:
    path: "{{ openstack_location }}"
  register: openstack_path

# Fail when the openstack client path does not exist.
- name: Aborting when the OpenStack client does not exist
  fail:
    msg: "The openstack client path '{{ openstack_location }}' is invalid."
  when: openstack_path.stat.exists == false

# The openstack variable includes the rc file and the path to the OpenStack client.
- name: Setting openstack variable to source the rc file and contain path to client
  set_fact:
    openstack: "source {{ openstack_rc }}; {{ openstack_location }}"

# Create the security group rule that allows uperf tests (TCP).
- name: Create the security group rule that allows uperf tests (TCP)
  shell: "{{ openstack }} security group rule create --ingress --protocol tcp --dst-port {{ permissive_secgroup_ports }} {{ permissive_secgroup_name }} --format value -c id"
  # Ignore failures if a conflicting rule already exists.
  ignore_errors: yes
  when: permissive_secgroup_enable

# Create the security group rule that allows uperf tests (UDP).
- name: Create the security group rule that allows uperf tests (UDP)
  shell: "{{ openstack }} security group rule create --ingress --protocol udp --dst-port {{ permissive_secgroup_ports }} {{ permissive_secgroup_name }} --format value -c id"
  # Ignore failures if a conflicting rule already exists.
  ignore_errors: yes
  when: permissive_secgroup_enable
